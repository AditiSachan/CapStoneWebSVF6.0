# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.26)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS SVF::SvfFlags SVF::SvfCore SVF::SvfLLVM SVF::ae SVF::cfl SVF::dvf SVF::llvm2svf SVF::mta SVF::saber SVF::svf-ex SVF::wpa)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Create imported target SVF::SvfFlags
add_library(SVF::SvfFlags INTERFACE IMPORTED)

set_target_properties(SVF::SvfFlags PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "SVF_INSTALL_EXTAPI_BC=\"/home/aditi/SVF/SVF/Release-build/lib/extapi.bc\""
  INTERFACE_COMPILE_FEATURES "c_std_11;cxx_std_17"
  INTERFACE_COMPILE_OPTIONS "\$<\$<NOT:\$<BOOL:ON>>:-fno-rtti>;\$<\$<BOOL:OFF>:-g3>;\$<\$<BOOL:ON>:-Wall>;\$<\$<BOOL:ON>:-Werror>;\$<\$<BOOL:ON>:-Wno-deprecated-declarations>;\$<\$<BOOL:true>:-UNDEBUG>;\$<\$<NOT:\$<BOOL:ON>>:-fno-exceptions>;\$<\$<OR:\$<BOOL:OFF>,\$<BOOL:>>:-fprofile-arcs>;\$<\$<OR:\$<BOOL:OFF>,\$<BOOL:>>:-ftest-coverage>;\$<\$<STREQUAL:,thread>:-fsanitize=thread>;\$<\$<STREQUAL:,address>:-fsanitize=address>;\$<\$<STREQUAL:,address>:-fno-omit-frame-pointer>"
  INTERFACE_INCLUDE_DIRECTORIES "/home/aditi/SVF/SVF/Release-build;/home/aditi/SVF/SVF/Release-build/include;/home/aditi/SVF/SVF/Release-build/include/SVF"
  INTERFACE_LINK_DIRECTORIES "/home/aditi/SVF/SVF/Release-build;/home/aditi/SVF/SVF/Release-build/lib"
  INTERFACE_LINK_LIBRARIES "z3::libz3"
  INTERFACE_LINK_OPTIONS "\$<\$<NOT:\$<BOOL:ON>>:-fno-rtti>;\$<\$<BOOL:OFF>:-g3>;\$<\$<BOOL:ON>:-Wall>;\$<\$<BOOL:ON>:-Werror>;\$<\$<BOOL:ON>:-Wno-deprecated-declarations>;\$<\$<BOOL:OFF>:-fuse-ld=lld>;\$<\$<BOOL:OFF>:-rdynamic>;\$<\$<BOOL:OFF>:-Wl,--export-dynamic>;\$<\$<BOOL:true>:-UNDEBUG>;\$<\$<NOT:\$<BOOL:ON>>:-fno-exceptions>;\$<\$<OR:\$<BOOL:OFF>,\$<BOOL:>>:-fprofile-arcs>;\$<\$<OR:\$<BOOL:OFF>,\$<BOOL:>>:-ftest-coverage>;\$<\$<STREQUAL:,thread>:-fsanitize=thread>;\$<\$<STREQUAL:,address>:-fsanitize=address>"
)

# Create imported target SVF::SvfCore
add_library(SVF::SvfCore SHARED IMPORTED)

set_target_properties(SVF::SvfCore PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/aditi/SVF/SVF/svf/include;/home/aditi/SVF/SVF/svf/include"
  INTERFACE_LINK_LIBRARIES "SVF::SvfFlags"
)

if(NOT CMAKE_VERSION VERSION_LESS "3.23.0")
  target_sources(SVF::SvfCore
    INTERFACE
      FILE_SET "HEADERS"
      TYPE "HEADERS"
      BASE_DIRS "/home/aditi/SVF/SVF/svf/include"
      FILES "/home/aditi/SVF/SVF/svf/include/AE/Core/AbstractState.h" "/home/aditi/SVF/SVF/svf/include/AE/Core/AbstractValue.h" "/home/aditi/SVF/SVF/svf/include/AE/Core/AddressValue.h" "/home/aditi/SVF/SVF/svf/include/AE/Core/ICFGWTO.h" "/home/aditi/SVF/SVF/svf/include/AE/Core/IntervalValue.h" "/home/aditi/SVF/SVF/svf/include/AE/Core/NumericValue.h" "/home/aditi/SVF/SVF/svf/include/AE/Core/RelExeState.h" "/home/aditi/SVF/SVF/svf/include/AE/Core/RelationSolver.h" "/home/aditi/SVF/SVF/svf/include/AE/Svfexe/AEDetector.h" "/home/aditi/SVF/SVF/svf/include/AE/Svfexe/AbsExtAPI.h" "/home/aditi/SVF/SVF/svf/include/AE/Svfexe/AbstractInterpretation.h" "/home/aditi/SVF/SVF/svf/include/CFL/CFGNormalizer.h" "/home/aditi/SVF/SVF/svf/include/CFL/CFGrammar.h" "/home/aditi/SVF/SVF/svf/include/CFL/CFLAlias.h" "/home/aditi/SVF/SVF/svf/include/CFL/CFLBase.h" "/home/aditi/SVF/SVF/svf/include/CFL/CFLGramGraphChecker.h" "/home/aditi/SVF/SVF/svf/include/CFL/CFLGraphBuilder.h" "/home/aditi/SVF/SVF/svf/include/CFL/CFLSVFGBuilder.h" "/home/aditi/SVF/SVF/svf/include/CFL/CFLSolver.h" "/home/aditi/SVF/SVF/svf/include/CFL/CFLStat.h" "/home/aditi/SVF/SVF/svf/include/CFL/CFLVF.h" "/home/aditi/SVF/SVF/svf/include/CFL/GrammarBuilder.h" "/home/aditi/SVF/SVF/svf/include/DDA/ContextDDA.h" "/home/aditi/SVF/SVF/svf/include/DDA/DDAClient.h" "/home/aditi/SVF/SVF/svf/include/DDA/DDAPass.h" "/home/aditi/SVF/SVF/svf/include/DDA/DDAStat.h" "/home/aditi/SVF/SVF/svf/include/DDA/DDAVFSolver.h" "/home/aditi/SVF/SVF/svf/include/DDA/FlowDDA.h" "/home/aditi/SVF/SVF/svf/include/FastCluster/fastcluster.h" "/home/aditi/SVF/SVF/svf/include/Graphs/BasicBlockG.h" "/home/aditi/SVF/SVF/svf/include/Graphs/CDG.h" "/home/aditi/SVF/SVF/svf/include/Graphs/CFLGraph.h" "/home/aditi/SVF/SVF/svf/include/Graphs/CHG.h" "/home/aditi/SVF/SVF/svf/include/Graphs/CallGraph.h" "/home/aditi/SVF/SVF/svf/include/Graphs/ConsG.h" "/home/aditi/SVF/SVF/svf/include/Graphs/ConsGEdge.h" "/home/aditi/SVF/SVF/svf/include/Graphs/ConsGNode.h" "/home/aditi/SVF/SVF/svf/include/Graphs/DOTGraphTraits.h" "/home/aditi/SVF/SVF/svf/include/Graphs/GenericGraph.h" "/home/aditi/SVF/SVF/svf/include/Graphs/GraphPrinter.h" "/home/aditi/SVF/SVF/svf/include/Graphs/GraphTraits.h" "/home/aditi/SVF/SVF/svf/include/Graphs/GraphWriter.h" "/home/aditi/SVF/SVF/svf/include/Graphs/ICFG.h" "/home/aditi/SVF/SVF/svf/include/Graphs/ICFGEdge.h" "/home/aditi/SVF/SVF/svf/include/Graphs/ICFGNode.h" "/home/aditi/SVF/SVF/svf/include/Graphs/ICFGStat.h" "/home/aditi/SVF/SVF/svf/include/Graphs/IRGraph.h" "/home/aditi/SVF/SVF/svf/include/Graphs/SCC.h" "/home/aditi/SVF/SVF/svf/include/Graphs/SVFG.h" "/home/aditi/SVF/SVF/svf/include/Graphs/SVFGEdge.h" "/home/aditi/SVF/SVF/svf/include/Graphs/SVFGNode.h" "/home/aditi/SVF/SVF/svf/include/Graphs/SVFGOPT.h" "/home/aditi/SVF/SVF/svf/include/Graphs/SVFGStat.h" "/home/aditi/SVF/SVF/svf/include/Graphs/ThreadCallGraph.h" "/home/aditi/SVF/SVF/svf/include/Graphs/VFG.h" "/home/aditi/SVF/SVF/svf/include/Graphs/VFGEdge.h" "/home/aditi/SVF/SVF/svf/include/Graphs/VFGNode.h" "/home/aditi/SVF/SVF/svf/include/Graphs/WTO.h" "/home/aditi/SVF/SVF/svf/include/MSSA/MSSAMuChi.h" "/home/aditi/SVF/SVF/svf/include/MSSA/MemPartition.h" "/home/aditi/SVF/SVF/svf/include/MSSA/MemRegion.h" "/home/aditi/SVF/SVF/svf/include/MSSA/MemSSA.h" "/home/aditi/SVF/SVF/svf/include/MSSA/SVFGBuilder.h" "/home/aditi/SVF/SVF/svf/include/MTA/LockAnalysis.h" "/home/aditi/SVF/SVF/svf/include/MTA/MHP.h" "/home/aditi/SVF/SVF/svf/include/MTA/MTA.h" "/home/aditi/SVF/SVF/svf/include/MTA/MTAStat.h" "/home/aditi/SVF/SVF/svf/include/MTA/TCT.h" "/home/aditi/SVF/SVF/svf/include/MemoryModel/AbstractPointsToDS.h" "/home/aditi/SVF/SVF/svf/include/MemoryModel/AccessPath.h" "/home/aditi/SVF/SVF/svf/include/MemoryModel/ConditionalPT.h" "/home/aditi/SVF/SVF/svf/include/MemoryModel/MutablePointsToDS.h" "/home/aditi/SVF/SVF/svf/include/MemoryModel/PersistentPointsToCache.h" "/home/aditi/SVF/SVF/svf/include/MemoryModel/PersistentPointsToDS.h" "/home/aditi/SVF/SVF/svf/include/MemoryModel/PointerAnalysis.h" "/home/aditi/SVF/SVF/svf/include/MemoryModel/PointerAnalysisImpl.h" "/home/aditi/SVF/SVF/svf/include/MemoryModel/PointsTo.h" "/home/aditi/SVF/SVF/svf/include/MemoryModel/SVFLoop.h" "/home/aditi/SVF/SVF/svf/include/SABER/DoubleFreeChecker.h" "/home/aditi/SVF/SVF/svf/include/SABER/FileChecker.h" "/home/aditi/SVF/SVF/svf/include/SABER/LeakChecker.h" "/home/aditi/SVF/SVF/svf/include/SABER/ProgSlice.h" "/home/aditi/SVF/SVF/svf/include/SABER/SaberCheckerAPI.h" "/home/aditi/SVF/SVF/svf/include/SABER/SaberCondAllocator.h" "/home/aditi/SVF/SVF/svf/include/SABER/SaberSVFGBuilder.h" "/home/aditi/SVF/SVF/svf/include/SABER/SrcSnkDDA.h" "/home/aditi/SVF/SVF/svf/include/SABER/SrcSnkSolver.h" "/home/aditi/SVF/SVF/svf/include/SVFIR/ObjTypeInfo.h" "/home/aditi/SVF/SVF/svf/include/SVFIR/PAGBuilderFromFile.h" "/home/aditi/SVF/SVF/svf/include/SVFIR/SVFIR.h" "/home/aditi/SVF/SVF/svf/include/SVFIR/SVFStatements.h" "/home/aditi/SVF/SVF/svf/include/SVFIR/SVFType.h" "/home/aditi/SVF/SVF/svf/include/SVFIR/SVFValue.h" "/home/aditi/SVF/SVF/svf/include/SVFIR/SVFVariables.h" "/home/aditi/SVF/SVF/svf/include/Util/Annotator.h" "/home/aditi/SVF/SVF/svf/include/Util/BitVector.h" "/home/aditi/SVF/SVF/svf/include/Util/CDGBuilder.h" "/home/aditi/SVF/SVF/svf/include/Util/CallGraphBuilder.h" "/home/aditi/SVF/SVF/svf/include/Util/Casting.h" "/home/aditi/SVF/SVF/svf/include/Util/CommandLine.h" "/home/aditi/SVF/SVF/svf/include/Util/CoreBitVector.h" "/home/aditi/SVF/SVF/svf/include/Util/CxtStmt.h" "/home/aditi/SVF/SVF/svf/include/Util/DPItem.h" "/home/aditi/SVF/SVF/svf/include/Util/ExtAPI.h" "/home/aditi/SVF/SVF/svf/include/Util/GeneralType.h" "/home/aditi/SVF/SVF/svf/include/Util/GraphReachSolver.h" "/home/aditi/SVF/SVF/svf/include/Util/NodeIDAllocator.h" "/home/aditi/SVF/SVF/svf/include/Util/Options.h" "/home/aditi/SVF/SVF/svf/include/Util/PTAStat.h" "/home/aditi/SVF/SVF/svf/include/Util/SVFBugReport.h" "/home/aditi/SVF/SVF/svf/include/Util/SVFLoopAndDomInfo.h" "/home/aditi/SVF/SVF/svf/include/Util/SVFStat.h" "/home/aditi/SVF/SVF/svf/include/Util/SVFUtil.h" "/home/aditi/SVF/SVF/svf/include/Util/SparseBitVector.h" "/home/aditi/SVF/SVF/svf/include/Util/ThreadAPI.h" "/home/aditi/SVF/SVF/svf/include/Util/WorkList.h" "/home/aditi/SVF/SVF/svf/include/Util/Z3Expr.h" "/home/aditi/SVF/SVF/svf/include/Util/cJSON.h" "/home/aditi/SVF/SVF/svf/include/Util/iterator.h" "/home/aditi/SVF/SVF/svf/include/Util/iterator_range.h" "/home/aditi/SVF/SVF/svf/include/WPA/Andersen.h" "/home/aditi/SVF/SVF/svf/include/WPA/AndersenPWC.h" "/home/aditi/SVF/SVF/svf/include/WPA/CSC.h" "/home/aditi/SVF/SVF/svf/include/WPA/FlowSensitive.h" "/home/aditi/SVF/SVF/svf/include/WPA/Steensgaard.h" "/home/aditi/SVF/SVF/svf/include/WPA/TypeAnalysis.h" "/home/aditi/SVF/SVF/svf/include/WPA/VersionedFlowSensitive.h" "/home/aditi/SVF/SVF/svf/include/WPA/WPAFSSolver.h" "/home/aditi/SVF/SVF/svf/include/WPA/WPAPass.h" "/home/aditi/SVF/SVF/svf/include/WPA/WPASolver.h" "/home/aditi/SVF/SVF/svf/include/WPA/WPAStat.h"
  )
else()
  set_property(TARGET SVF::SvfCore
    APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES
      "/home/aditi/SVF/SVF/svf/include"
  )
endif()

# Create imported target SVF::SvfLLVM
add_library(SVF::SvfLLVM SHARED IMPORTED)

set_target_properties(SVF::SvfLLVM PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/aditi/SVF/SVF/svf-llvm/include;/home/aditi/SVF/SVF/svf-llvm/include"
  INTERFACE_LINK_LIBRARIES "SVF::SvfFlags;SVF::SvfCore;LLVM"
)

if(NOT CMAKE_VERSION VERSION_LESS "3.23.0")
  target_sources(SVF::SvfLLVM
    INTERFACE
      FILE_SET "HEADERS"
      TYPE "HEADERS"
      BASE_DIRS "/home/aditi/SVF/SVF/svf-llvm/include"
      FILES "/home/aditi/SVF/SVF/svf-llvm/include/SVF-LLVM/BasicTypes.h" "/home/aditi/SVF/SVF/svf-llvm/include/SVF-LLVM/BreakConstantExpr.h" "/home/aditi/SVF/SVF/svf-llvm/include/SVF-LLVM/CHGBuilder.h" "/home/aditi/SVF/SVF/svf-llvm/include/SVF-LLVM/CppUtil.h" "/home/aditi/SVF/SVF/svf-llvm/include/SVF-LLVM/DCHG.h" "/home/aditi/SVF/SVF/svf-llvm/include/SVF-LLVM/GEPTypeBridgeIterator.h" "/home/aditi/SVF/SVF/svf-llvm/include/SVF-LLVM/ICFGBuilder.h" "/home/aditi/SVF/SVF/svf-llvm/include/SVF-LLVM/LLVMLoopAnalysis.h" "/home/aditi/SVF/SVF/svf-llvm/include/SVF-LLVM/LLVMModule.h" "/home/aditi/SVF/SVF/svf-llvm/include/SVF-LLVM/LLVMUtil.h" "/home/aditi/SVF/SVF/svf-llvm/include/SVF-LLVM/ObjTypeInference.h" "/home/aditi/SVF/SVF/svf-llvm/include/SVF-LLVM/SVFIRBuilder.h" "/home/aditi/SVF/SVF/svf-llvm/include/SVF-LLVM/SymbolTableBuilder.h"
  )
else()
  set_property(TARGET SVF::SvfLLVM
    APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES
      "/home/aditi/SVF/SVF/svf-llvm/include"
  )
endif()

# Create imported target SVF::ae
add_executable(SVF::ae IMPORTED)

# Create imported target SVF::cfl
add_executable(SVF::cfl IMPORTED)

# Create imported target SVF::dvf
add_executable(SVF::dvf IMPORTED)

# Create imported target SVF::llvm2svf
add_executable(SVF::llvm2svf IMPORTED)

# Create imported target SVF::mta
add_executable(SVF::mta IMPORTED)

# Create imported target SVF::saber
add_executable(SVF::saber IMPORTED)

# Create imported target SVF::svf-ex
add_executable(SVF::svf-ex IMPORTED)

# Create imported target SVF::wpa
add_executable(SVF::wpa IMPORTED)

# Import target "SVF::SvfCore" for configuration "Release"
set_property(TARGET SVF::SvfCore APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(SVF::SvfCore PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/aditi/SVF/SVF/Release-build/lib/libSvfCore.so.3.1"
  IMPORTED_SONAME_RELEASE "libSvfCore.so.3"
  )

# Import target "SVF::SvfLLVM" for configuration "Release"
set_property(TARGET SVF::SvfLLVM APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(SVF::SvfLLVM PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/aditi/SVF/SVF/Release-build/lib/libSvfLLVM.so.3.1"
  IMPORTED_SONAME_RELEASE "libSvfLLVM.so.3"
  )

# Import target "SVF::ae" for configuration "Release"
set_property(TARGET SVF::ae APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(SVF::ae PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/aditi/SVF/SVF/Release-build/bin/ae"
  )

# Import target "SVF::cfl" for configuration "Release"
set_property(TARGET SVF::cfl APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(SVF::cfl PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/aditi/SVF/SVF/Release-build/bin/cfl"
  )

# Import target "SVF::dvf" for configuration "Release"
set_property(TARGET SVF::dvf APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(SVF::dvf PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/aditi/SVF/SVF/Release-build/bin/dvf"
  )

# Import target "SVF::llvm2svf" for configuration "Release"
set_property(TARGET SVF::llvm2svf APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(SVF::llvm2svf PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/aditi/SVF/SVF/Release-build/bin/llvm2svf"
  )

# Import target "SVF::mta" for configuration "Release"
set_property(TARGET SVF::mta APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(SVF::mta PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/aditi/SVF/SVF/Release-build/bin/mta"
  )

# Import target "SVF::saber" for configuration "Release"
set_property(TARGET SVF::saber APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(SVF::saber PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/aditi/SVF/SVF/Release-build/bin/saber"
  )

# Import target "SVF::svf-ex" for configuration "Release"
set_property(TARGET SVF::svf-ex APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(SVF::svf-ex PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/aditi/SVF/SVF/Release-build/bin/svf-ex"
  )

# Import target "SVF::wpa" for configuration "Release"
set_property(TARGET SVF::wpa APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(SVF::wpa PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/aditi/SVF/SVF/Release-build/bin/wpa"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
